/*
  *Created by M.Helal
  *On May  
  *to showcase knowledge learned in this course through a Joke Generator
 */

import java.text.DecimalFormat;
import java.util.*;
import javax.swing.JOptionPane;

public class JokeGenerator extends javax.swing.JFrame {

    ArrayList<String> customJokes = new ArrayList();
    ArrayList<String> customAnswers = new ArrayList();

    //initialize static fields
    private static int riddleIndex;
    private static int riddleAnswerIndex;
    private static double likedRiddles = 1;
    private static double totalRiddles = 1;
    private static int oneLinerIndex = 10;
    private static double likedOneLiners = 1;
    private static double totalOneLiners = 1;
    private static int mathPunIndex = 25;
    private static int mathPunAnswerIndex = 10;
    private static double likedMathPuns = 1;
    private static double totalMathPuns = 1;

    public JokeGenerator() {
        initComponents();
        disableButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        riddleArea = new javax.swing.JTextArea();
        riddleAnswerArea = new javax.swing.JTextArea();
        generateRiddle = new javax.swing.JButton();
        tellRiddle = new javax.swing.JButton();
        riddleLiked = new javax.swing.JLabel();
        riddleTotal = new javax.swing.JLabel();
        riddlePercent = new javax.swing.JLabel();
        oneLinerAnswerArea = new javax.swing.JTextArea();
        generateOneLiner = new javax.swing.JButton();
        oneLinerLiked = new javax.swing.JLabel();
        oneLinerTotal = new javax.swing.JLabel();
        oneLinerPercent = new javax.swing.JLabel();
        mathPunArea = new javax.swing.JTextArea();
        mathPunAnswerArea = new javax.swing.JTextArea();
        generateMathPun = new javax.swing.JButton();
        tellMathPun = new javax.swing.JButton();
        mathPunLiked = new javax.swing.JLabel();
        mathPunTotal = new javax.swing.JLabel();
        mathPunPercent = new javax.swing.JLabel();
        customJokeInput = new javax.swing.JTextArea();
        customAnswerInput = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        customJokeDisplay = new javax.swing.JTextArea();
        clearCustomJokes = new javax.swing.JButton();
        displayCustomJokes = new javax.swing.JButton();
        addCustomAnswer = new javax.swing.JButton();
        addCustomJoke = new javax.swing.JButton();
        oneLinerGFX = new javax.swing.JLabel();
        riddleGFX = new javax.swing.JLabel();
        mathPunGFX = new javax.swing.JLabel();
        customJokeGFX = new javax.swing.JLabel();
        errorArea4 = new javax.swing.JTextArea();
        successArea1 = new javax.swing.JTextArea();
        successArea2 = new javax.swing.JTextArea();
        successArea3 = new javax.swing.JTextArea();
        successArea4 = new javax.swing.JTextArea();
        panelGFX1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        riddleArea.setEditable(false);
        riddleArea.setBackground(new java.awt.Color(68, 217, 230));
        riddleArea.setColumns(20);
        riddleArea.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        riddleArea.setForeground(new java.awt.Color(54, 54, 54));
        riddleArea.setLineWrap(true);
        riddleArea.setRows(5);
        riddleArea.setWrapStyleWord(true);
        riddleArea.setBorder(null);
        getContentPane().add(riddleArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 230, 70));

        riddleAnswerArea.setEditable(false);
        riddleAnswerArea.setBackground(new java.awt.Color(68, 217, 230));
        riddleAnswerArea.setColumns(20);
        riddleAnswerArea.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        riddleAnswerArea.setForeground(new java.awt.Color(54, 54, 54));
        riddleAnswerArea.setLineWrap(true);
        riddleAnswerArea.setRows(5);
        riddleAnswerArea.setWrapStyleWord(true);
        riddleAnswerArea.setBorder(null);
        getContentPane().add(riddleAnswerArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 230, 60));

        generateRiddle.setBackground(new java.awt.Color(68, 217, 230));
        generateRiddle.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        generateRiddle.setForeground(new java.awt.Color(54, 54, 54));
        generateRiddle.setText("Generate");
        generateRiddle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateRiddleActionPerformed(evt);
            }
        });
        getContentPane().add(generateRiddle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 90, -1));

        tellRiddle.setBackground(new java.awt.Color(68, 217, 230));
        tellRiddle.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        tellRiddle.setForeground(new java.awt.Color(54, 54, 54));
        tellRiddle.setText("Tell Me!");
        tellRiddle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tellRiddleActionPerformed(evt);
            }
        });
        getContentPane().add(tellRiddle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, -1, -1));

        riddleLiked.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        riddleLiked.setForeground(new java.awt.Color(68, 217, 230));
        riddleLiked.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        riddleLiked.setText("0");
        getContentPane().add(riddleLiked, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 410, 20, -1));

        riddleTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        riddleTotal.setForeground(new java.awt.Color(68, 217, 230));
        riddleTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        riddleTotal.setText("0");
        getContentPane().add(riddleTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 20, 20));

        riddlePercent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        riddlePercent.setForeground(new java.awt.Color(68, 217, 230));
        riddlePercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        riddlePercent.setText("0%");
        getContentPane().add(riddlePercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 50, 30));

        oneLinerAnswerArea.setEditable(false);
        oneLinerAnswerArea.setBackground(new java.awt.Color(255, 102, 196));
        oneLinerAnswerArea.setColumns(20);
        oneLinerAnswerArea.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        oneLinerAnswerArea.setForeground(new java.awt.Color(54, 54, 54));
        oneLinerAnswerArea.setLineWrap(true);
        oneLinerAnswerArea.setRows(5);
        oneLinerAnswerArea.setWrapStyleWord(true);
        oneLinerAnswerArea.setBorder(null);
        getContentPane().add(oneLinerAnswerArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 230, 70));

        generateOneLiner.setBackground(new java.awt.Color(255, 102, 196));
        generateOneLiner.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        generateOneLiner.setForeground(new java.awt.Color(54, 54, 54));
        generateOneLiner.setText("Generate");
        generateOneLiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateOneLinerActionPerformed(evt);
            }
        });
        getContentPane().add(generateOneLiner, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, -1, -1));

        oneLinerLiked.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        oneLinerLiked.setForeground(new java.awt.Color(255, 102, 196));
        oneLinerLiked.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        oneLinerLiked.setText("0");
        getContentPane().add(oneLinerLiked, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, 20, -1));

        oneLinerTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        oneLinerTotal.setForeground(new java.awt.Color(255, 102, 196));
        oneLinerTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        oneLinerTotal.setText("0");
        getContentPane().add(oneLinerTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 430, 20, 20));

        oneLinerPercent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        oneLinerPercent.setForeground(new java.awt.Color(255, 102, 196));
        oneLinerPercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oneLinerPercent.setText("0%");
        getContentPane().add(oneLinerPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 50, 30));

        mathPunArea.setEditable(false);
        mathPunArea.setBackground(new java.awt.Color(255, 145, 77));
        mathPunArea.setColumns(20);
        mathPunArea.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        mathPunArea.setForeground(new java.awt.Color(54, 54, 54));
        mathPunArea.setLineWrap(true);
        mathPunArea.setRows(5);
        mathPunArea.setWrapStyleWord(true);
        mathPunArea.setBorder(null);
        getContentPane().add(mathPunArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 230, 70));

        mathPunAnswerArea.setEditable(false);
        mathPunAnswerArea.setBackground(new java.awt.Color(255, 145, 77));
        mathPunAnswerArea.setColumns(20);
        mathPunAnswerArea.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        mathPunAnswerArea.setForeground(new java.awt.Color(54, 54, 54));
        mathPunAnswerArea.setLineWrap(true);
        mathPunAnswerArea.setRows(5);
        mathPunAnswerArea.setWrapStyleWord(true);
        mathPunAnswerArea.setBorder(null);
        getContentPane().add(mathPunAnswerArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 230, 60));

        generateMathPun.setBackground(new java.awt.Color(255, 145, 77));
        generateMathPun.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        generateMathPun.setForeground(new java.awt.Color(54, 54, 54));
        generateMathPun.setText("Generate");
        generateMathPun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateMathPunActionPerformed(evt);
            }
        });
        getContentPane().add(generateMathPun, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 90, -1));

        tellMathPun.setBackground(new java.awt.Color(255, 145, 77));
        tellMathPun.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        tellMathPun.setForeground(new java.awt.Color(54, 54, 54));
        tellMathPun.setText("Tell Me!");
        tellMathPun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tellMathPunActionPerformed(evt);
            }
        });
        getContentPane().add(tellMathPun, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 280, -1, -1));

        mathPunLiked.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mathPunLiked.setForeground(new java.awt.Color(255, 145, 77));
        mathPunLiked.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mathPunLiked.setText("0");
        getContentPane().add(mathPunLiked, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 410, 20, -1));

        mathPunTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mathPunTotal.setForeground(new java.awt.Color(255, 145, 77));
        mathPunTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mathPunTotal.setText("0");
        getContentPane().add(mathPunTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 430, 20, 20));

        mathPunPercent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mathPunPercent.setForeground(new java.awt.Color(255, 145, 77));
        mathPunPercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mathPunPercent.setText("0%");
        getContentPane().add(mathPunPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 480, 50, 30));

        customJokeInput.setBackground(new java.awt.Color(126, 217, 87));
        customJokeInput.setColumns(20);
        customJokeInput.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        customJokeInput.setForeground(new java.awt.Color(54, 54, 54));
        customJokeInput.setLineWrap(true);
        customJokeInput.setRows(5);
        customJokeInput.setWrapStyleWord(true);
        customJokeInput.setBorder(null);
        customJokeInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customJokeInputMouseClicked(evt);
            }
        });
        customJokeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customJokeInputKeyPressed(evt);
            }
        });
        getContentPane().add(customJokeInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 120, 230, 70));

        customAnswerInput.setBackground(new java.awt.Color(126, 217, 87));
        customAnswerInput.setColumns(20);
        customAnswerInput.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        customAnswerInput.setForeground(new java.awt.Color(54, 54, 54));
        customAnswerInput.setLineWrap(true);
        customAnswerInput.setRows(5);
        customAnswerInput.setWrapStyleWord(true);
        customAnswerInput.setBorder(null);
        customAnswerInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customAnswerInputMouseClicked(evt);
            }
        });
        getContentPane().add(customAnswerInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 270, 230, 60));

        jScrollPane1.setBackground(new java.awt.Color(7, 237, 87));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(54, 54, 54));
        jScrollPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane1.setOpaque(false);

        customJokeDisplay.setEditable(false);
        customJokeDisplay.setBackground(new java.awt.Color(126, 217, 87));
        customJokeDisplay.setColumns(20);
        customJokeDisplay.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        customJokeDisplay.setForeground(new java.awt.Color(54, 54, 54));
        customJokeDisplay.setLineWrap(true);
        customJokeDisplay.setRows(5);
        customJokeDisplay.setWrapStyleWord(true);
        customJokeDisplay.setBorder(null);
        jScrollPane1.setViewportView(customJokeDisplay);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 410, 230, 110));

        clearCustomJokes.setBackground(new java.awt.Color(126, 217, 87));
        clearCustomJokes.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        clearCustomJokes.setForeground(new java.awt.Color(54, 54, 54));
        clearCustomJokes.setText("Clear");
        clearCustomJokes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCustomJokesActionPerformed(evt);
            }
        });
        getContentPane().add(clearCustomJokes, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 530, 70, -1));

        displayCustomJokes.setBackground(new java.awt.Color(126, 217, 87));
        displayCustomJokes.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        displayCustomJokes.setForeground(new java.awt.Color(54, 54, 54));
        displayCustomJokes.setText("Display");
        displayCustomJokes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCustomJokesActionPerformed(evt);
            }
        });
        getContentPane().add(displayCustomJokes, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 530, 90, -1));

        addCustomAnswer.setBackground(new java.awt.Color(126, 217, 87));
        addCustomAnswer.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        addCustomAnswer.setForeground(new java.awt.Color(54, 54, 54));
        addCustomAnswer.setText("Add");
        addCustomAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomAnswerActionPerformed(evt);
            }
        });
        getContentPane().add(addCustomAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 345, -1, -1));

        addCustomJoke.setBackground(new java.awt.Color(126, 217, 87));
        addCustomJoke.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        addCustomJoke.setForeground(new java.awt.Color(54, 54, 54));
        addCustomJoke.setText("Add");
        addCustomJoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomJokeActionPerformed(evt);
            }
        });
        getContentPane().add(addCustomJoke, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 200, -1, -1));

        oneLinerGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Riddle.png"))); // NOI18N
        getContentPane().add(oneLinerGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 570));

        riddleGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/One-Liner.png"))); // NOI18N
        getContentPane().add(riddleGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, -1, 570));

        mathPunGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Math Pun.png"))); // NOI18N
        getContentPane().add(mathPunGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 250, 570));

        customJokeGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Custom.png"))); // NOI18N
        getContentPane().add(customJokeGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 250, 570));

        errorArea4.setEditable(false);
        errorArea4.setBackground(new java.awt.Color(54, 54, 54));
        errorArea4.setColumns(20);
        errorArea4.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        errorArea4.setForeground(new java.awt.Color(204, 0, 0));
        errorArea4.setLineWrap(true);
        errorArea4.setRows(5);
        errorArea4.setWrapStyleWord(true);
        errorArea4.setBorder(null);
        getContentPane().add(errorArea4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 580, 230, 60));

        successArea1.setEditable(false);
        successArea1.setBackground(new java.awt.Color(54, 54, 54));
        successArea1.setColumns(20);
        successArea1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        successArea1.setForeground(new java.awt.Color(0, 153, 0));
        successArea1.setLineWrap(true);
        successArea1.setRows(5);
        successArea1.setWrapStyleWord(true);
        successArea1.setBorder(null);
        getContentPane().add(successArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, -1, 60));

        successArea2.setEditable(false);
        successArea2.setBackground(new java.awt.Color(54, 54, 54));
        successArea2.setColumns(20);
        successArea2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        successArea2.setForeground(new java.awt.Color(0, 153, 0));
        successArea2.setLineWrap(true);
        successArea2.setRows(5);
        successArea2.setWrapStyleWord(true);
        successArea2.setBorder(null);
        getContentPane().add(successArea2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 580, 230, 60));

        successArea3.setEditable(false);
        successArea3.setBackground(new java.awt.Color(54, 54, 54));
        successArea3.setColumns(20);
        successArea3.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        successArea3.setForeground(new java.awt.Color(0, 153, 0));
        successArea3.setLineWrap(true);
        successArea3.setRows(5);
        successArea3.setWrapStyleWord(true);
        successArea3.setBorder(null);
        getContentPane().add(successArea3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 580, 230, 60));

        successArea4.setEditable(false);
        successArea4.setBackground(new java.awt.Color(54, 54, 54));
        successArea4.setColumns(20);
        successArea4.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        successArea4.setForeground(new java.awt.Color(0, 153, 0));
        successArea4.setLineWrap(true);
        successArea4.setRows(5);
        successArea4.setWrapStyleWord(true);
        successArea4.setBorder(null);
        getContentPane().add(successArea4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 580, 230, 60));

        panelGFX1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Panel1.png"))); // NOI18N
        getContentPane().add(panelGFX1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 570, 1000, 80));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private static final String[] QUESTION = new String[] 
    // 10 riddles (0-9)
    {"I start with an e and end with "
        + "an e. I have whole countries inside of me. What am I?",
        "What is the mistake in the the following question?", "What stays "
        + "where it is when it goes off?", "Your mother and father have a child. It "
        + "is not your brother and it is not your sister. Who is it?",
        "A man is sitting in his cabin in Colorado. Three hours later "
        + "he gets out of his cabin in Texas. How is this possible?",
        "I am an ancient invention that allows people to see through walls? "
        + "What am I?", "A box without hinges, key or lid, yet golden "
        + "treasure inside is hid. What am I?", "You cannot keep me "
        + "until you have given me. What am I?", "I am a seed with three "
        + "letters in my name. Take away two letters and I sound quite "
        + "the same. What am I?", "Why is an older one hundred dollar "
        + "bill worth more than a newer one?",
        // 15 one-liners (10-24)
        "Velcro—what a rip-off!", "I recently decided to sell my vacuum cleaner"
        + " as all it was doing was gathering dust.", "Don’t you hate it "
        + "when someone answers their own questions? I do.", "The best "
        + "thing about good old days is that we were neither good nor old.",
        "If we shouldn’t eat at night, why do they put a light in the "
        + "fridge?", "Did you hear about the crook who stole a calendar? He "
        + "got twelve months.", "Did you hear about the semi-colon that broke "
        + "the law? He was given two consecutive sentences.", "What’s the "
        + "difference between ignorance and apathy? I don't know and I don't "
        + "care.", "If I got 50 cents for every failed math exam, I’d have "
        + "$ 6.30 now.", "A lot of people cry when they cut onions. The trick "
        + "is not to form an emotional bond.", "250 lbs here on Earth is 94.5 "
        + "lbs on Mercury. No, I’m not fat. I’m just not on the right planet.",
        "I woke up this morning and forgot which side the sun rises from, then "
        + "it dawned on me.", "What’s the difference between a good joke and "
        + "a bad joke timing.", "The world tongue-twister champion just got "
        + "arrested. I hear they’re gonna give him a really tough sentence.",
        "I own the world’s worst thesaurus. Not only is it awful, it’s awful.",
        // 10 math puns (25-34)
        "What is the hardest shape to get out of?", "How do you stay warm in an"
        + " empty room?", "Did you hear about the statistician who drowned"
        + " crossing a river?", " Why should the number 288 never be "
        + "mentioned?", "Are monsters good at math?", "I just saw my math "
        + "teacher lock himself in his office with a piece of graph paper.",
        "Why do teenagers always travel in groups of 3, 5, or 7?", "Parallel "
        + "lines have so much in common.", "Why should you wear glasses during"
        + " math class?", "I knew a mathematician who couldn’t afford lunch."};

    private static final String[] ANSWER = new String[] 
    // 10 riddle answers(0-9)
    {"Europe", "The word “the” is repeated.", "An alarm clock.",
        "It is you!", "The man is a pilot and the cabin is the cockpit of a plane.",
        "A window", "An egg", "Your word!", "Pea", "Because it is worth $100 "
        + "which is more than a newer $1 bill",
        //10 math pun answers (10-19)
        "The trap-azoid.", "Go stand in the corner—it’s always 90°.",
        "It was three feet deep, on average.", "Because it’s two gross.", "No,"
        + " unless you Count Dracula.", "I think he must be plotting. "
        + "something.", "Because they can’t even.", "It’s a shame they’ll "
        + "never meet.", "They say it improves division.", "He could binomial."};

    private void disableButtons() {
        //Disable secondary buttons
        tellRiddle.setEnabled(false);
        tellMathPun.setEnabled(false);
        addCustomAnswer.setEnabled(false);

    }
    
    private void clearHints() {
        //format user interface
        successArea4.setVisible(false);
        errorArea4.setVisible(false);
    }

    private int generateRiddle(int i) {
        riddleArea.setText(QUESTION[i++]);

        //format interface
        riddleAnswerArea.setText("");

        generateRiddle.setEnabled(false);
        generateOneLiner.setEnabled(false);
        generateMathPun.setEnabled(false);
        tellRiddle.setEnabled(true);

        return i;
    }

    private int tellRiddle(int i) {
        riddleAnswerArea.setText(ANSWER[i++]);

        //format buttons
        tellRiddle.setEnabled(false);
        generateMathPun.setEnabled(true);
        generateRiddle.setEnabled(true);
        generateOneLiner.setEnabled(true);

        return i;
    }
    private void generateRiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateRiddleActionPerformed
        // generate riddle to be displayed to user
        if (riddleIndex <= 9) {
            riddleIndex = generateRiddle(riddleIndex);

        } else {
            successArea1.setText("You read all 10 riddles, try some"
                    + "other genres, or make your own unlimited custom jokes!");

            generateRiddle.setEnabled(false);
            generateOneLiner.setEnabled(true);
        }

    }//GEN-LAST:event_generateRiddleActionPerformed

    private void tellRiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tellRiddleActionPerformed
        // generate riddle answer to be displayed to user
        DecimalFormat rounded = new DecimalFormat("0");
        if (riddleAnswerIndex <= 9) {
            riddleAnswerIndex = tellRiddle(riddleAnswerIndex);
        }

        // prompt user
        int YesOrNo = JOptionPane.showConfirmDialog(null,
                "Did you like that Riddle?",
                "Confirmation",
                JOptionPane.YES_NO_OPTION);

        // display fraction and calculate percent
        if (YesOrNo == 0) {
            riddleLiked.setText(String.valueOf(rounded.format(likedRiddles++)));
        }
        riddleTotal.setText(String.valueOf(rounded.format(totalRiddles++)));
        riddlePercent.setText((String.valueOf(rounded.format((likedRiddles - 1)
                / (totalRiddles - 1) * 100))) + "%");

    }//GEN-LAST:event_tellRiddleActionPerformed

    private void generateOneLinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateOneLinerActionPerformed
        DecimalFormat rounded = new DecimalFormat("0");
        tellRiddle.setEnabled(false);

        // generate one liner to be displayed to user
        if (oneLinerIndex <= 24) {
            oneLinerAnswerArea.setText(QUESTION[oneLinerIndex++]);

            //count total number of one liners
            oneLinerTotal.setText(String.valueOf(rounded.format(totalOneLiners++)));

            //prompt user
            int YesOrNo = JOptionPane.showConfirmDialog(null,
                    "Did you like that One Liner?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            //count amount of liked one liners
            if (YesOrNo == 0) {
                oneLinerLiked.setText(String.valueOf(rounded.format(likedOneLiners++)));
            }

            //calculate and display percent
            oneLinerPercent.setText((String.valueOf(rounded.format((likedOneLiners - 1)
                    / (totalOneLiners - 1) * 100))) + "%");

        } else {
            successArea2.setText("You read all 15 one-liners, try "
                    + "some other genres, or make your own unlimited custom"
                    + " jokes!");

            generateOneLiner.setEnabled(false);

        }

    }//GEN-LAST:event_generateOneLinerActionPerformed

    private void generateMathPunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateMathPunActionPerformed
        //Generate math pun and display it to user
        if (mathPunIndex <= 34) {
            mathPunArea.setText(QUESTION[mathPunIndex++]);

            //format user interface
            mathPunAnswerArea.setText("");
            generateMathPun.setEnabled(false);
            generateRiddle.setEnabled(false);
            generateOneLiner.setEnabled(false);
            tellMathPun.setEnabled(true);

        } else {
            successArea3.setText("You read all 10 math puns, try some"
                    + "other genres, or make your own unlimited custom jokes!");

            generateMathPun.setEnabled(false);
        }
    }//GEN-LAST:event_generateMathPunActionPerformed

    private void tellMathPunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tellMathPunActionPerformed
        DecimalFormat rounded = new DecimalFormat("0");

        //Generate and display math pun answer to user
        if (mathPunAnswerIndex <= 19) {
            mathPunAnswerArea.setText(ANSWER[mathPunAnswerIndex++]);

            //format buttons
            tellMathPun.setEnabled(false);
            generateMathPun.setEnabled(true);
            generateOneLiner.setEnabled(true);
            generateRiddle.setEnabled(true);

        }
        //prompt user
        int YesOrNo = JOptionPane.showConfirmDialog(null,
                "Did you like that Math Pun?",
                "Confirmation",
                JOptionPane.YES_NO_OPTION);

        // display fraction and calculate percent
        if (YesOrNo == 0) {
            mathPunLiked.setText(String.valueOf(rounded.format(likedMathPuns++)));
        }
        mathPunTotal.setText(String.valueOf(rounded.format(totalMathPuns++)));
        mathPunPercent.setText((String.valueOf(rounded.format((likedMathPuns - 1)
                / (totalMathPuns - 1) * 100))) + "%");
    }//GEN-LAST:event_tellMathPunActionPerformed

    private void addCustomJokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomJokeActionPerformed
        clearHints();

        int i = Collections.binarySearch(customJokes,
                customJokeInput.getText(), String.CASE_INSENSITIVE_ORDER);
        boolean empty = customJokeInput.getText().trim().isEmpty();

        //check if input is empty
        if (empty) {
            customJokeInput.setText("");
            successArea4.setVisible(false);
            errorArea4.setVisible(true);
            errorArea4.setText("The joke question field you entered is "
                    + "empty.");

        //check if input has already been entered
        } else if (i >= 0) {
            customJokeInput.setText("");
            successArea4.setVisible(false);
            errorArea4.setVisible(true);
            errorArea4.setText("The joke question you entered is already on "
                    + "the list");

        //prompt user    
        } else {
            int YesOrNo = JOptionPane.showConfirmDialog(null,
                    "Are you sure you wish to add that joke to the list?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            if (YesOrNo == 0) {
                //add joke to list
                customJokes.add(customJokeInput.getText());

                //format user interface
                customJokeDisplay.setText("");
                customJokeInput.setText("");
                errorArea4.setVisible(false);
                successArea4.setVisible(true);
                successArea4.setText("Joke question succesfully added!");

                addCustomJoke.setEnabled(false);
                clearCustomJokes.setEnabled(false);
                displayCustomJokes.setEnabled(false);
                addCustomAnswer.setEnabled(true);

            } else {
                errorArea4.setVisible(false);
                successArea4.setVisible(true);
                successArea4.setText("Successfully Aborted");
            }

        }
    }//GEN-LAST:event_addCustomJokeActionPerformed

    private void addCustomAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomAnswerActionPerformed
        clearHints();

        int i = Collections.binarySearch(customAnswers,
                customAnswerInput.getText(), String.CASE_INSENSITIVE_ORDER);
        boolean empty = customAnswerInput.getText().trim().isEmpty();

        //check if input is empty
        if (empty) {
            
            errorArea4.setText("The joke answer field you entered is empty");

            customAnswerInput.setText("");
            successArea4.setVisible(false);
            errorArea4.setVisible(true);

            //check if input has already been entered
        } else if (i >= 0) {
            successArea4.setVisible(false);
            errorArea4.setVisible(true);
            errorArea4.setText("The joke answer you entered is already "
                    + "on the list");

            customAnswerInput.setText("");
            successArea4.setVisible(false);

            //prompt user    
        } else {
            int YesOrNo = JOptionPane.showConfirmDialog(null,
                    "Are you sure you wish to add that answer to the list?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            if (YesOrNo == 0) {
                //add joke answer to list
                customAnswers.add(customAnswerInput.getText());

                //format user interface
                successArea4.setVisible(true);
                successArea4.setText("Joke answer succesfully added!");
                customAnswerInput.setText("");
                errorArea4.setVisible(false);

                addCustomAnswer.setEnabled(false);
                clearCustomJokes.setEnabled(true);
                addCustomJoke.setEnabled(true);
                displayCustomJokes.setEnabled(true);

            } else {
                errorArea4.setVisible(false);
                successArea4.setVisible(true);
                successArea4.setText("Successfully Aborted");
            }

        }
    }//GEN-LAST:event_addCustomAnswerActionPerformed

    private void displayCustomJokesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCustomJokesActionPerformed
        clearHints();

        //initialize variable
        String jokeList = "Your Custom Jokes:\n";

        //format corresponding joke questions and answers
        for (int i = 0; i < customJokes.size(); i++) {
            jokeList = jokeList + "Q. " + customJokes.get(i) + "\nA. "
                    + customAnswers.get(i) + "\n\n";
        }

        //display custom jokes to user
        customJokeDisplay.setText(jokeList);

    }//GEN-LAST:event_displayCustomJokesActionPerformed

    private void clearCustomJokesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCustomJokesActionPerformed
        //prompt user
        int YesOrNo = JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to clear your custom jokes?",
                "Confirmation",
                JOptionPane.YES_NO_OPTION);

        //clear both joke and answer arrays
        if (YesOrNo == 0) {
            customJokes.clear();
            customAnswers.clear();

            customJokeDisplay.setText("");
            successArea4.setText("");
            errorArea4.setText("");

        } else {
            errorArea4.setVisible(false);
            successArea4.setVisible(true);
            successArea4.setText("Successfully Aborted!");
        }
    }//GEN-LAST:event_clearCustomJokesActionPerformed

    private void customJokeInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customJokeInputKeyPressed
        clearHints();
    }//GEN-LAST:event_customJokeInputKeyPressed

    private void customJokeInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customJokeInputMouseClicked
        clearHints();
    }//GEN-LAST:event_customJokeInputMouseClicked

    private void customAnswerInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customAnswerInputMouseClicked
        clearHints();
    }//GEN-LAST:event_customAnswerInputMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JokeGenerator.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JokeGenerator().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomAnswer;
    private javax.swing.JButton addCustomJoke;
    private javax.swing.JButton clearCustomJokes;
    private javax.swing.JTextArea customAnswerInput;
    private javax.swing.JTextArea customJokeDisplay;
    private javax.swing.JLabel customJokeGFX;
    private javax.swing.JTextArea customJokeInput;
    private javax.swing.JButton displayCustomJokes;
    private javax.swing.JTextArea errorArea4;
    private javax.swing.JButton generateMathPun;
    private javax.swing.JButton generateOneLiner;
    private javax.swing.JButton generateRiddle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mathPunAnswerArea;
    private javax.swing.JTextArea mathPunArea;
    private javax.swing.JLabel mathPunGFX;
    private javax.swing.JLabel mathPunLiked;
    private javax.swing.JLabel mathPunPercent;
    private javax.swing.JLabel mathPunTotal;
    private javax.swing.JTextArea oneLinerAnswerArea;
    private javax.swing.JLabel oneLinerGFX;
    private javax.swing.JLabel oneLinerLiked;
    private javax.swing.JLabel oneLinerPercent;
    private javax.swing.JLabel oneLinerTotal;
    private javax.swing.JLabel panelGFX1;
    private javax.swing.JTextArea riddleAnswerArea;
    private javax.swing.JTextArea riddleArea;
    private javax.swing.JLabel riddleGFX;
    private javax.swing.JLabel riddleLiked;
    private javax.swing.JLabel riddlePercent;
    private javax.swing.JLabel riddleTotal;
    private javax.swing.JTextArea successArea1;
    private javax.swing.JTextArea successArea2;
    private javax.swing.JTextArea successArea3;
    private javax.swing.JTextArea successArea4;
    private javax.swing.JButton tellMathPun;
    private javax.swing.JButton tellRiddle;
    // End of variables declaration//GEN-END:variables
}
